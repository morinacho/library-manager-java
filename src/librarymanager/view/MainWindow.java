/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package librarymanager.view;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;  
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import librarymanager.Files;
import librarymanager.Book;
import librarymanager.Loan;
import librarymanager.Partner;

/**
 *
 * @author nacho
 */
public class MainWindow extends javax.swing.JFrame {
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }
    
    /*
    * Metodo para limpiar la tabla y no se repitan los datos al mostrarlo
    */
    public void cleanTable(DefaultTableModel model){
        for (int i = 0; i < model.getRowCount(); i++) {
            model.removeRow(i);
            i-=1;
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolBar = new javax.swing.JToolBar();
        openDocument = new javax.swing.JButton();
        loadDatabase = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        exportPdf = new javax.swing.JButton();
        exportWord = new javax.swing.JButton();
        exportExcel = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        newAdmin = new javax.swing.JButton();
        help = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        searchPanel = new javax.swing.JPanel();
        LibraryTitle = new javax.swing.JLabel();
        searchInput = new javax.swing.JTextField();
        logo = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        loansPanel = new javax.swing.JPanel();
        toolbarLoans = new javax.swing.JToolBar();
        listLaons = new javax.swing.JButton();
        newLoan = new javax.swing.JButton();
        renewLoan = new javax.swing.JButton();
        deleteLoan = new javax.swing.JButton();
        searchLoan = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        loanTable = new javax.swing.JTable();
        booksPanel = new javax.swing.JPanel();
        toolbarBooks = new javax.swing.JToolBar();
        listBook = new javax.swing.JButton();
        newBook = new javax.swing.JButton();
        editBook = new javax.swing.JButton();
        deleteBook = new javax.swing.JButton();
        bookNotReturned = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        booksTable = new javax.swing.JTable();
        partnersPanel = new javax.swing.JPanel();
        toolbarUser = new javax.swing.JToolBar();
        listPartners = new javax.swing.JButton();
        newPartner = new javax.swing.JButton();
        editPartner = new javax.swing.JButton();
        deletePartner = new javax.swing.JButton();
        defaulterPartner = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        canvas1 = new java.awt.Canvas();
        Menu = new javax.swing.JMenuBar();
        Files = new javax.swing.JMenu();
        Tools = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Library Manager 3.0");

        toolBar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolBar.setRollover(true);

        openDocument.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/folder.png"))); // NOI18N
        openDocument.setToolTipText("Open document");
        openDocument.setFocusable(false);
        openDocument.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openDocument.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(openDocument);

        loadDatabase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/database_add.png"))); // NOI18N
        loadDatabase.setToolTipText("Load database");
        loadDatabase.setFocusable(false);
        loadDatabase.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        loadDatabase.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        loadDatabase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadDatabaseActionPerformed(evt);
            }
        });
        toolBar.add(loadDatabase);

        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/disk.png"))); // NOI18N
        save.setToolTipText("Save");
        save.setFocusable(false);
        save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(save);

        jSeparator1.setBackground(new java.awt.Color(74, 74, 74));
        jSeparator1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        toolBar.add(jSeparator1);

        exportPdf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_white_acrobat.png"))); // NOI18N
        exportPdf.setToolTipText("Export to pdf");
        exportPdf.setFocusable(false);
        exportPdf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportPdf.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(exportPdf);

        exportWord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_word.png"))); // NOI18N
        exportWord.setToolTipText("Export to word");
        exportWord.setFocusable(false);
        exportWord.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportWord.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(exportWord);

        exportExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/page_excel.png"))); // NOI18N
        exportExcel.setToolTipText("Export to excel");
        exportExcel.setFocusable(false);
        exportExcel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exportExcel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(exportExcel);

        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/printer.png"))); // NOI18N
        print.setToolTipText("Print");
        print.setFocusable(false);
        print.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        print.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });
        toolBar.add(print);
        toolBar.add(jSeparator2);

        newAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_key.png"))); // NOI18N
        newAdmin.setToolTipText("New admin");
        newAdmin.setFocusable(false);
        newAdmin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newAdmin.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolBar.add(newAdmin);

        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/help.png"))); // NOI18N
        help.setToolTipText("Help");
        help.setFocusable(false);
        help.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        help.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        toolBar.add(help);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        searchPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        LibraryTitle.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        LibraryTitle.setText("Library Manager 3.0");

        searchInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInputActionPerformed(evt);
            }
        });

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/logo.png"))); // NOI18N

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/magnifier.png"))); // NOI18N

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(LibraryTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logo)))
                .addContainerGap(251, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(LibraryTitle))
                    .addComponent(logo))
                .addGap(72, 72, 72)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(304, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Search", searchPanel);

        toolbarLoans.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolbarLoans.setRollover(true);

        listLaons.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/report.png"))); // NOI18N
        listLaons.setToolTipText("List loans");
        listLaons.setFocusable(false);
        listLaons.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        listLaons.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        listLaons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listLaonsActionPerformed(evt);
            }
        });
        toolbarLoans.add(listLaons);

        newLoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/report_add.png"))); // NOI18N
        newLoan.setToolTipText("New loans");
        newLoan.setFocusable(false);
        newLoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newLoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newLoanActionPerformed(evt);
            }
        });
        toolbarLoans.add(newLoan);

        renewLoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/report_go.png"))); // NOI18N
        renewLoan.setToolTipText("Renew Loan");
        renewLoan.setFocusable(false);
        renewLoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        renewLoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarLoans.add(renewLoan);

        deleteLoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/report_delete.png"))); // NOI18N
        deleteLoan.setToolTipText("Delete Loan");
        deleteLoan.setFocusable(false);
        deleteLoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteLoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarLoans.add(deleteLoan);

        searchLoan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/report_magnify.png"))); // NOI18N
        searchLoan.setToolTipText("Search Loan");
        searchLoan.setFocusable(false);
        searchLoan.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        searchLoan.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        searchLoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchLoanActionPerformed(evt);
            }
        });
        toolbarLoans.add(searchLoan);

        loanTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Libro", "Socio", "Fecha Prestamo", "Fecha Devolucion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        loanTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(loanTable);
        if (loanTable.getColumnModel().getColumnCount() > 0) {
            loanTable.getColumnModel().getColumn(0).setResizable(false);
            loanTable.getColumnModel().getColumn(1).setResizable(false);
            loanTable.getColumnModel().getColumn(2).setResizable(false);
            loanTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout loansPanelLayout = new javax.swing.GroupLayout(loansPanel);
        loansPanel.setLayout(loansPanelLayout);
        loansPanelLayout.setHorizontalGroup(
            loansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolbarLoans, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
            .addComponent(jScrollPane3)
        );
        loansPanelLayout.setVerticalGroup(
            loansPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loansPanelLayout.createSequentialGroup()
                .addComponent(toolbarLoans, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Loans", loansPanel);

        toolbarBooks.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolbarBooks.setRollover(true);

        listBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/book.png"))); // NOI18N
        listBook.setToolTipText("List book");
        listBook.setFocusable(false);
        listBook.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        listBook.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        listBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listBookActionPerformed(evt);
            }
        });
        toolbarBooks.add(listBook);

        newBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/book_add.png"))); // NOI18N
        newBook.setToolTipText("New book");
        newBook.setFocusable(false);
        newBook.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newBook.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newBookActionPerformed(evt);
            }
        });
        toolbarBooks.add(newBook);

        editBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/book_edit.png"))); // NOI18N
        editBook.setToolTipText("Edit book");
        editBook.setFocusable(false);
        editBook.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editBook.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBookActionPerformed(evt);
            }
        });
        toolbarBooks.add(editBook);

        deleteBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/book_delete.png"))); // NOI18N
        deleteBook.setToolTipText("Delete book");
        deleteBook.setFocusable(false);
        deleteBook.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteBook.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBookActionPerformed(evt);
            }
        });
        toolbarBooks.add(deleteBook);

        bookNotReturned.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/book_error.png"))); // NOI18N
        bookNotReturned.setToolTipText("Book not returned");
        bookNotReturned.setFocusable(false);
        bookNotReturned.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bookNotReturned.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarBooks.add(bookNotReturned);

        booksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Autor", "Editorial", "ISBN", "Id book", "Cantidad", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        booksTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(booksTable);
        if (booksTable.getColumnModel().getColumnCount() > 0) {
            booksTable.getColumnModel().getColumn(0).setResizable(false);
            booksTable.getColumnModel().getColumn(0).setPreferredWidth(150);
            booksTable.getColumnModel().getColumn(1).setResizable(false);
            booksTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            booksTable.getColumnModel().getColumn(2).setResizable(false);
            booksTable.getColumnModel().getColumn(2).setPreferredWidth(150);
            booksTable.getColumnModel().getColumn(3).setResizable(false);
            booksTable.getColumnModel().getColumn(3).setPreferredWidth(60);
            booksTable.getColumnModel().getColumn(4).setResizable(false);
            booksTable.getColumnModel().getColumn(4).setPreferredWidth(10);
            booksTable.getColumnModel().getColumn(5).setResizable(false);
            booksTable.getColumnModel().getColumn(5).setPreferredWidth(8);
            booksTable.getColumnModel().getColumn(6).setResizable(false);
            booksTable.getColumnModel().getColumn(6).setPreferredWidth(20);
        }

        javax.swing.GroupLayout booksPanelLayout = new javax.swing.GroupLayout(booksPanel);
        booksPanel.setLayout(booksPanelLayout);
        booksPanelLayout.setHorizontalGroup(
            booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolbarBooks, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
        );
        booksPanelLayout.setVerticalGroup(
            booksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(booksPanelLayout.createSequentialGroup()
                .addComponent(toolbarBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Books", booksPanel);

        toolbarUser.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolbarUser.setRollover(true);

        listPartners.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group.png"))); // NOI18N
        listPartners.setToolTipText("List Partners");
        listPartners.setFocusable(false);
        listPartners.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        listPartners.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        listPartners.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listPartnersActionPerformed(evt);
            }
        });
        toolbarUser.add(listPartners);

        newPartner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_add.png"))); // NOI18N
        newPartner.setToolTipText("New partner");
        newPartner.setFocusable(false);
        newPartner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newPartner.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPartnerActionPerformed(evt);
            }
        });
        toolbarUser.add(newPartner);

        editPartner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_edit.png"))); // NOI18N
        editPartner.setToolTipText("Edit partner");
        editPartner.setFocusable(false);
        editPartner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editPartner.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        editPartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPartnerActionPerformed(evt);
            }
        });
        toolbarUser.add(editPartner);

        deletePartner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_delete.png"))); // NOI18N
        deletePartner.setToolTipText("Delete partner");
        deletePartner.setFocusable(false);
        deletePartner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deletePartner.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        deletePartner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePartnerActionPerformed(evt);
            }
        });
        toolbarUser.add(deletePartner);

        defaulterPartner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/group_error.png"))); // NOI18N
        defaulterPartner.setToolTipText("Defaulter partner");
        defaulterPartner.setFocusable(false);
        defaulterPartner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        defaulterPartner.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbarUser.add(defaulterPartner);

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Apellido", "Nombre", "Dni", "Direccion", "Numero socio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(userTable);
        if (userTable.getColumnModel().getColumnCount() > 0) {
            userTable.getColumnModel().getColumn(0).setResizable(false);
            userTable.getColumnModel().getColumn(1).setResizable(false);
            userTable.getColumnModel().getColumn(2).setResizable(false);
            userTable.getColumnModel().getColumn(3).setResizable(false);
            userTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout partnersPanelLayout = new javax.swing.GroupLayout(partnersPanel);
        partnersPanel.setLayout(partnersPanelLayout);
        partnersPanelLayout.setHorizontalGroup(
            partnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolbarUser, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
            .addGroup(partnersPanelLayout.createSequentialGroup()
                .addGap(573, 573, 573)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        partnersPanelLayout.setVerticalGroup(
            partnersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(partnersPanelLayout.createSequentialGroup()
                .addComponent(toolbarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(302, 302, 302))
        );

        jTabbedPane1.addTab("Partners", partnersPanel);

        Files.setText("Files");
        Menu.add(Files);

        Tools.setText("Tools");
        Menu.add(Tools);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchInputActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        // Activa la ventana de ayuda
        HelpWindow helpWindow = new HelpWindow();
        helpWindow.setResizable(false);
        helpWindow.setLocationRelativeTo(this);
        helpWindow.setVisible(true);
        
    }//GEN-LAST:event_helpActionPerformed

    private void listPartnersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listPartnersActionPerformed
        // Recupero los datos y limpio la tabla
        DefaultTableModel model = (DefaultTableModel) userTable.getModel();
        cleanTable(model);
        
        List<Partner> listPartner;
        String lastname, name, dni, address, idpartner;
        Files filePartner;  
        
        try{
            filePartner = new Files("partners");
            listPartner = new ArrayList<>(filePartner.readFile("partners"));
            for(int i=0; i<listPartner.size(); i++){
                lastname       = listPartner.get(i).getLastname();
                name           = listPartner.get(i).getName();
                dni            = listPartner.get(i).getDni();
                address        = listPartner.get(i).getAddress();
                idpartner      = listPartner.get(i).getIdPartner();
                
                Object data[] = {lastname,name,dni, address, idpartner};
                model.addRow(data);    
            }
        }
        catch(IOException ex){}
    }//GEN-LAST:event_listPartnersActionPerformed

    private void newPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPartnerActionPerformed
        // TODO add your handling code here:
        PartnerAdd partneradd = new PartnerAdd();
        partneradd.setResizable(false);
        partneradd.setLocationRelativeTo(this);
        partneradd.setVisible(true);
    }//GEN-LAST:event_newPartnerActionPerformed

    private void listBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listBookActionPerformed
        // Recupero los datos y limpio la tabla
        DefaultTableModel model = (DefaultTableModel) booksTable.getModel();
        cleanTable(model);
        
        List<Book> listBooks;
        String title, isbn, editorialName, autorName, status, idbook;
        int total;
        Files fileBook; 
        
        try{
            fileBook  = new Files("books");
            listBooks = new ArrayList<>(fileBook.readFile("books"));
            for(int i=0; i<listBooks.size(); i++){
                // Recupero toda la informacion de los libros
                title          = listBooks.get(i).getTitle();
                autorName      = listBooks.get(i).getAuthor();
                editorialName  = listBooks.get(i).getEditorial();
                isbn           = listBooks.get(i).getIsbn();
                total           = listBooks.get(i).getTotal();
                idbook        = listBooks.get(i).getIdBook();
                if(listBooks.get(i).getStatus()){
                    status = "Disponible";
                }else{
                    status = "Prestado";
                }
                Object data[] = {title,autorName, editorialName, isbn, idbook, total, status};
                model.addRow(data);    
            }
        }catch(IOException e){
            e.getStackTrace();
            System.out.println("Error al Listar libros");
        }
    }//GEN-LAST:event_listBookActionPerformed

    private void newBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newBookActionPerformed
        // TODO add your handling code here:
        BookAdd newLibro = new BookAdd();
        newLibro.setResizable(false);
        newLibro.setLocationRelativeTo(this);
        newLibro.setVisible(true);
    }//GEN-LAST:event_newBookActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_printActionPerformed

    private void listLaonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listLaonsActionPerformed
        // Recupero los datos y limpio la tabla
        DefaultTableModel model = (DefaultTableModel) loanTable.getModel();
        cleanTable(model);
        
        List<Loan> listLoan;
        String bookName, partnerName;
        LocalDate loandate, returndate;
        Files fileLoan;      
        try{
            fileLoan = new Files("loans");
            listLoan = new ArrayList<>(fileLoan.readFile("loans"));
            for(int i=0; i<listLoan.size(); i++){
                // Recupero toda la informacion de los prestamo
                partnerName     = listLoan.get(i).getSocio().getName() + " " + listLoan.get(i).getSocio().getLastname();
                bookName        = listLoan.get(i).getLibro().getTitle();
                loandate   = listLoan.get(i).getLoanDate();
                returndate = listLoan.get(i).getReturnDate();
                
                Object data[]  = {bookName, partnerName,loandate,returndate};
                model.addRow(data);    
            }
        }catch(IOException e){
            System.out.println("Error al Listar prestamos");
        }
    }//GEN-LAST:event_listLaonsActionPerformed

    private void editPartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPartnerActionPerformed
        // TODO add your handling code here:
        try{
            int row = userTable.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) userTable.getModel();
            String lastname   = (String) modelo.getValueAt(row, 0),
                   name       = (String) modelo.getValueAt(row, 1),
                   dni        = (String) modelo.getValueAt(row, 2),
                   address    = (String) modelo.getValueAt(row, 3),
                   idpartner  = (String) modelo.getValueAt(row, 4);
            PartnerEdit editSocio = new PartnerEdit(name, lastname, dni, address, idpartner);
            editSocio.setResizable(false);
            editSocio.setLocationRelativeTo(this);
            editSocio.setVisible(true);
        }
        catch(Exception ex){
            WarningWindow warning = new WarningWindow("Usuario no seleccionado");
            warning.setResizable(false);
            warning.setLocationRelativeTo(this);
            warning.setVisible(true);
        }
    }//GEN-LAST:event_editPartnerActionPerformed

    private void deletePartnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePartnerActionPerformed
        // TODO add your handling code here:
        try{
            int row = userTable.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) userTable.getModel();
            String lastname = (String) modelo.getValueAt(row, 0),
                   name     = (String) modelo.getValueAt(row, 1),
                   dni      = (String) modelo.getValueAt(row, 2);
            PartnerDelete deletesocio = new PartnerDelete(lastname, name, dni);
            deletesocio.setResizable(false);
            deletesocio.setLocationRelativeTo(this);
            deletesocio.setVisible(true);
            
        }
        catch(Exception ex){
           System.out.print(ex);
        }
        
    }//GEN-LAST:event_deletePartnerActionPerformed

    private void loadDatabaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadDatabaseActionPerformed
        try {
            //Prueba de funcionamiento de libro
            List <Book> books = new ArrayList<>();
            Book book = new Book("Cómo programar en Java", "9780134743356", 1, "Paul Deitel, Harvey Deite", "Pearson College");
            books.add(book);
            book = new Book("Python 3", "9788441526136", 1, "Mark Summerfield", "Anaya Multimedia");
            books.add(book);
            book = new Book("C++ Primer", "9788441526136", 1, "Stanley B. Lippman, Josée Lajoie, Barbara E. Moo", "Addison-Wesley");
            book.setStatus();
            books.add(book);
            
            Files fileBook = new Files("books");
            fileBook.writeFile(books);
            
            //Pruebas de funcionamiento Socio
            List <Partner> partners = new ArrayList<>();
            Partner partner = new Partner("Pablo","Dominguez","35987632", "Calle falsa 1234");
            partners.add(partner);
            partner = new Partner("Carlos","Ceballo","40156951", "EverGreen 654");
            partners.add(partner);
            partner = new Partner("Julio","Tpertz","42357963", "Av. Notnumbre 1032");
            partner.setDefaulter();
            partners.add(partner);
            
            Files fileSocio = new Files("partners");
            fileSocio.writeFile(partners);
            
            // Prueba de funcionamiento de Prestamo
            List <Loan> loans = new ArrayList<>();
            Loan loan = new Loan(partner, book);
            loans.add(loan);
            
            Files fileLoan = new Files("loans");
            fileLoan.writeFile(loans);
        }
        catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadDatabaseActionPerformed

    private void editBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBookActionPerformed
        // TODO add your handling code here:   
        try{
            int row = booksTable.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) booksTable.getModel();
            
            String title      = (String) modelo.getValueAt(row, 0),
                   authorName = (String) modelo.getValueAt(row, 1),
                   editorial  = (String) modelo.getValueAt(row, 2),
                   isbn       = (String) modelo.getValueAt(row, 3),
                   idbook     = (String) modelo.getValueAt(row, 4);
            BookEdit editlibro = new BookEdit(title, authorName, editorial, isbn, idbook);
            editlibro.setResizable(false);
            editlibro.setLocationRelativeTo(this);
            editlibro.setVisible(true);
        }
        catch(Exception ex){
            WarningWindow warning = new WarningWindow("Libro no seleccionado");
            warning.setResizable(false);
            warning.setLocationRelativeTo(this);
            warning.setVisible(true);
        }       
    }//GEN-LAST:event_editBookActionPerformed

    private void deleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBookActionPerformed
        // TODO add your handling code here:
        int row = booksTable.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) booksTable.getModel();
            String bookName = (String) modelo.getValueAt(row, 0),
                   idbook   = (String) modelo.getValueAt(row, 4);
            
        BookDelete bookdelete = new BookDelete(bookName,idbook);
        bookdelete.setResizable(false);
        bookdelete.setLocationRelativeTo(this);
        bookdelete.setVisible(true);
        
    }//GEN-LAST:event_deleteBookActionPerformed

    private void newLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newLoanActionPerformed
        // TODO add your handling code here:
        LoanAdd loanadd = new LoanAdd();
        loanadd.setResizable(false);
        loanadd.setLocationRelativeTo(this);
        loanadd.setVisible(true);
    }//GEN-LAST:event_newLoanActionPerformed

    private void searchLoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchLoanActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) loanTable.getModel();
        cleanTable(model);
        
        String partnerName,  bookName;
        LocalDate returndate, loandate;
        Files loanfile = new Files("loans");
        try { 
            List <Loan> loans = new ArrayList<>(loanfile.readFile("loans"));
            for(int i=0; i<loans.size(); i++){
                if(loans.get(i).getLoanDate().isBefore(LocalDate.now())){
                    partnerName     = loans.get(i).getSocio().getName() + " " + loans.get(i).getSocio().getLastname();
                    bookName        = loans.get(i).getLibro().getTitle();
                    loandate        = loans.get(i).getLoanDate();
                    returndate      = loans.get(i).getReturnDate();
                    Object data[]  = {bookName, partnerName, loandate, returndate};
                    
                    model.addRow(data);  
                }
            }
        } 
        catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_searchLoanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu Files;
    private javax.swing.JLabel LibraryTitle;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenu Tools;
    private javax.swing.JButton bookNotReturned;
    private javax.swing.JPanel booksPanel;
    private javax.swing.JTable booksTable;
    private java.awt.Canvas canvas1;
    private javax.swing.JButton defaulterPartner;
    private javax.swing.JButton deleteBook;
    private javax.swing.JButton deleteLoan;
    private javax.swing.JButton deletePartner;
    private javax.swing.JButton editBook;
    private javax.swing.JButton editPartner;
    private javax.swing.JButton exportExcel;
    private javax.swing.JButton exportPdf;
    private javax.swing.JButton exportWord;
    private javax.swing.JButton help;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton listBook;
    private javax.swing.JButton listLaons;
    private javax.swing.JButton listPartners;
    private javax.swing.JButton loadDatabase;
    private javax.swing.JTable loanTable;
    private javax.swing.JPanel loansPanel;
    private javax.swing.JLabel logo;
    private javax.swing.JButton newAdmin;
    private javax.swing.JButton newBook;
    private javax.swing.JButton newLoan;
    private javax.swing.JButton newPartner;
    private javax.swing.JButton openDocument;
    private javax.swing.JPanel partnersPanel;
    private javax.swing.JButton print;
    private javax.swing.JButton renewLoan;
    private javax.swing.JButton save;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchInput;
    private javax.swing.JButton searchLoan;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JToolBar toolBar;
    private javax.swing.JToolBar toolbarBooks;
    private javax.swing.JToolBar toolbarLoans;
    private javax.swing.JToolBar toolbarUser;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}